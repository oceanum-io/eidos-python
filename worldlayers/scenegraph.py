# generated by datamodel-codegen:
#   filename:  worldlayers/scenegraph.json
#   timestamp: 2024-05-12T22:42:44+00:00

from __future__ import annotations

from typing import Any, Dict, Optional

from pydantic import ConfigDict, Field

from eidos._basemodel import EidosModel

from .. import features
from ..core import state
from ..viewnodes import world


class Gltf(EidosModel):
    model_config = ConfigDict(
        extra='allow',
    )
    field_default: str = Field(..., alias='_default')


class Scenegraph(EidosModel):
    key: Optional[str] = Field(
        None,
        description='Data field to use as key for scenegraph model',
        title='Scenegraph key',
    )
    gltf: Gltf = Field(
        ...,
        description='name or URLs of GLTF model keyed to data property',
        title='GLTF models',
    )


class ScenegraphLayerDatakeys(EidosModel):
    model_config = ConfigDict(
        extra='allow',
    )
    x: str
    y: str
    z: Optional[str] = 'z'
    roll: Optional[str] = 'roll'
    pitch: Optional[str] = 'pitch'
    yaw: Optional[str] = 'yaw'
    xoffset: Optional[str] = 'xoffset'
    yoffset: Optional[str] = 'yoffset'
    zoffset: Optional[str] = 'zoffset'
    xscale: Optional[str] = 'xscale'
    yscale: Optional[str] = 'yscale'
    zscale: Optional[str] = 'zscale'


class ScenegraphLayer(EidosModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    datakeys: ScenegraphLayerDatakeys
    hoverInfo: Optional[world.HoverInfo] = None
    timeSelect: Optional[state.TimeSelect] = None
    geometry: Optional[features.Feature] = None
    colormap: Optional[world.Colormap] = None
    scenegraph: Optional[Scenegraph] = None
    style: Optional[Dict[str, Any]] = None
